<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    package="re.sourcecode.android.wattsnearby">

    <!--
        Tell the system this app requires OpenGL ES 2.0. Needed for Google Maps
        Android API v2.
    -->
    <uses-feature
        android:glEsVersion="0x00020000"
        android:required="true" />

    <!-- Normal permissions -->
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="com.google.android.providers.gsf.permission.READ_GSERVICES" />

    <!--
        Dangerous permissions
        The ACCESS_COARSE/FINE_LOCATION permissions are not required to use
        Google Maps Android API v2, but you must specify either coarse or fine
        location permissions for the 'MyLocation' functionality.
    -->
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />

    <!-- Permission for content provider. Require same developer keys -->
    <permission
        android:name="re.sourcecode.android.wattsnearby.READ"
        android:protectionLevel="signature" />

    <application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/AppTheme"
        tools:ignore="GoogleAppIndexingWarning">

        <uses-library
            android:name="org.apache.http.legacy"
            android:required="false" />

        <meta-data
            android:name="com.google.android.geo.API_KEY"
            android:value="@string/google_cloud_api_key" />

        <meta-data
            android:name="com.google.android.gms.ads.APPLICATION_ID"
            android:value="ca-app-pub-5213087131455295~5217467366" />

        <activity android:name=".MainMapActivity">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>

        <activity android:name=".SettingsActivity" />

        <!-- Our ContentProvider -->

        <provider
            android:name=".data.ChargingStationProvider"
            android:authorities="@string/content_authority"
            android:exported="true"
            android:permission="re.sourcecode.android.wattsnearby.READ" />


        <!-- We'll need to add two entries to our manifest for our collection view widget -->

        <!-- 1. The broadcast receiver that refers to our widget. This needs the
                intent-filter android.appwidget.action.APPWIDGET_UPDATE and the
                meta-data for our XML widget configuration -->
        <receiver android:name=".widget.CollectionWidget">
            <intent-filter>
                <action android:name="android.appwidget.action.APPWIDGET_UPDATE" />
            </intent-filter>

            <meta-data
                android:name="android.appwidget.provider"
                android:resource="@xml/collection_widget_info" />
        </receiver>

        <!-- 2. The service that will send our collection data to our widget. It needs the
                permission android.permission.BIND_REMOTEVIEWS -->
        <service
            android:name=".widget.WidgetService"
            android:permission="android.permission.BIND_REMOTEVIEWS"
            android:exported="false" />
    </application>

</manifest>